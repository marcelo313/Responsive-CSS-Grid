html {
    scroll-behavior: smooth;
}

body {
    background-color: #737373;
    font-size: 18px;
    line-height: 1.15;
    margin: 0;
    padding: 0;
}

.overview {
    background-attachment: fixed; /* Parallax effect */
    background-position: center;  /* Parallax effect */
    background-repeat: no-repeat; /* Parallax effect */
    background-size: cover;       /* Parallax effect */
    color: white;
    height: 400px;                /* Parallax effect */
    background-image: url('images/header.jpg');
}

.overview p {
    color: white;
    font-size: 24px;
    padding: 0 100px;
    text-align: center;
}

h1 {
    font-size: 50px;
    line-height: 1;
    padding: 50px 0;
    text-align: center;
}

h2 {
    font-size: 32px;
    line-height: 1.5;
}

nav li {
    display: inline;
    padding-right: 20px;
}

nav a {
    color: black;
    font-weight: bold;
    text-decoration: none;
}

.skip a {
    background: white;
    left: 0;
    padding: 6px;
    -webkit-transition: top 1s ease-out;
    transition: top 1s ease-out;
    z-index: 1;
}

nav {
    background-color: #ddd;
    padding: 25px 0;
    text-align: left;
}

footer {
    background-color: black;
    color: white;
    padding-top: 30px;
    text-align: center;
}

.text-block {
    background-color: rgba(255, 255, 255, .8);
    border: 10px solid black;
    padding: 30px;
}

/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when links in the navigation are in the hover or focus state. */
nav a:hover,
nav a:focus {
    text-decoration: underline;
}

/* Step 2a: Write selector/rule property to position the default position for the skip class element */
.skip {
    position: fixed;
    top: -50px;
    left: 0;
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus */
.skip:focus {
    top: 0;
}

/* Step 3: Write selector/rule property to style all elements when in focus */
/* Focusing mainly on the skip link, which will be visible when focused */
:focus {
    outline: 2px solid #000;
}

/* Step 4: Write selector/rule property to style the container */
.container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 20px;
    padding: 20px;
}

/* Step 5: Write selector/rule property to add the background image to the first div in the grid and place it in the grid. */
/* Assuming the first div is the .overview class */
.overview {
    grid-column: span 2;
}

/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next four rows in the grid. */
/* This will be a lot of rules.... but be strategic and combine selectors */
.about-image,
.method-image,
.clients-image,
.contact-image {
    grid-column: 1 / span 1;
}

.about,
.method,
.clients,
.contact {
    grid-column: 2 / span 1;
}

/* Step 8: Write the selector/rule property to style the .text-block class. */
.text-block {
    padding: 20px;
    background-color: rgba(255, 255, 255, 0.8);
}

/* Step 9: Write the selector/rule property to style the nav element */
nav {
    background-color: #ddd;
    padding: 20px;
    text-align: center;
}

/* Step 10: Write the selector/rule property to update the .container class */
.container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
}

/* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed) */
/* This might depend on the exact layout you're aiming for, but for simplicity, the above rules should place every element into the grid in a basic manner */

@media screen and (prefers-reduced-motion: reduce) {
    html {
        scroll-behavior: auto; 
    }

    .skip a {
        -webkit-transition: none; 
        transition: none;        
    }

    
    .overview {
        background-attachment: initial;
    }
}
